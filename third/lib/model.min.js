let C=null,A=require("to-qcloud-sdk.min.js");const init=()=>{C=((e,t,c)=>A.sdk.requestApi(e,t,c))},startConnectDevice=e=>C("connectDevice",e),getDeviceBindToken=()=>C("AppCreateDeviceBindToken",{}),getDeviceList=()=>C("AppGetFamilyDeviceList",{FamilyId:"default"}),updateDeviceName=({ProductId:e,DeviceName:t,AliasName:c})=>C("AppUpdateDeviceInFamily",{FamilyId:"default",ProductId:e,DeviceName:t,AliasName:c}),deleteDevice=({DeviceName:e,ProductId:t})=>C("AppDeleteDeviceInFamily",{FamilyId:"default",DeviceName:e,ProductId:t}),getDeviceStatuses=({ProductId:e,DeviceIds:t})=>C("AppGetDeviceStatuses",{ProductId:e,DeviceIds:t}),getDeviceData=({DeviceId:e})=>C("AppGetDeviceData",{DeviceId:e}),getDeviceDataMap=e=>{const t={};return Promise.all(e.map(e=>getDeviceData({DeviceId:e}).then(({Data:t})=>({Data:t,DeviceId:e})))).then(e=>(e.forEach(({Data:e,DeviceId:c})=>{try{e=JSON.parse(e)}catch(t){e={}}t[c]=e}),t))},getProducts=({ProductIds:e})=>C("AppGetProducts",{ProductIds:e}),controlDeviceData=(e,t)=>C("AppControlDeviceData",{ProductId:e.ProductId,DeviceName:e.DeviceName,Data:JSON.stringify(t)});module.exports={init:init,getDeviceList:getDeviceList,getDeviceStatuses:getDeviceStatuses,getDeviceData:getDeviceData,getDeviceDataMap:getDeviceDataMap,getProducts:getProducts,controlDeviceData:controlDeviceData,getDeviceBindToken:getDeviceBindToken,startConnectDevice:startConnectDevice,updateDeviceName:updateDeviceName,deleteDevice:deleteDevice};