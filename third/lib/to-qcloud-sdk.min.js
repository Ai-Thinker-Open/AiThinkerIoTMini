const{QcloudIotExplorerAppDevSdk:QcloudIotExplorerAppDevSdk}=require("./qcloud-sdk.min.js");let Q=null,D=null,M=null,MINI_AppKey=null,MINI_AppSecret=null;function a(e,t){D=require("Ai-QcloudDevSDK.min.js"),M=require("model.min"),MINI_AppKey=e.appKey,MINI_AppSecret=e.appSecret,(Q=new QcloudIotExplorerAppDevSdk({debug:e.isDebug,appKey:e.appKey,getAccessToken:()=>b(),wsConfig:{}})).init().then(()=>{e.isDebug&&console.log("Q.init() ok ..."),D.notifyQCloudsMsgEvent({type:D.QCloudType.EVENT_INIT_SUCCESS}),module.exports.sdk=Q,M.init(),Q.ws.ws.onMessage(t=>{let o=JSON.parse(t.data);"DeviceChange"===o.action&&"Report"===o.params.SubType&&(e.isDebug&&console.log("device msg:",o),D.notifyQCloudsMsgEvent({type:D.QCloudType.EVENT_DEVICE_UPDATE,data:o}))})}).catch(e=>{console.error(e)}),D.listenGetDeviceListEvent(!0,()=>{M.getDeviceList().then(({DeviceList:t})=>{let o=[],n=[];t.forEach(e=>{o.push(e.DeviceId),n.push({ProductId:e.ProductId,DeviceName:e.DeviceName,DeviceId:e.DeviceId})}),M.getDeviceStatuses({ProductId:e.ProductId,DeviceIds:o}).then(e=>{t.forEach(t=>{e.DeviceStatuses.forEach(e=>{t.DeviceId===e.DeviceId&&(t.Online=e.Online)})}),Q.subscribeDevices(n).then(e=>{}),t.sort((e,t)=>-(e.Online-t.Online)),D.notifyQCloudsMsgEvent({type:D.QCloudType.EVENT_GET_DEVICE_LIST,data:t})})})}),D.listenReInitQCloudEvent(!0,()=>{Q.init({reload:!0}).then(()=>{D.notifyQCloudsMsgEvent({type:D.QCloudType.EVENT_INIT_SUCCESS}),module.exports.sdk=Q,M.init()}).catch(e=>{console.log("listenReInitQCloudEvent error: ",JSON.stringify(e))})}),D.listenNotifyStartSmartConfig(!0,({type:t,ssid:o,password:n,bssid:s})=>{M.getDeviceBindToken().then(({Token:i})=>{Q.connectDevice({connectType:t,connectOpts:{targetWifiInfo:{SSID:o,BSSID:s,password:n},bindDeviceToken:i,onProgress(t){switch(e.isDebug&&console.log("onProgress",t),t.code){case"CONNECT_SMARTCONFIG_START":D.notifyQCloudsMsgEvent({type:D.QCloudType.EVENT_CONFIG_START});break;case"CONNECT_SMARTCONFIG_SUCCESS":D.notifyQCloudsMsgEvent({type:D.QCloudType.EVENT_CONFIG_OK});break;case"ADD_DEVICE_START":D.notifyQCloudsMsgEvent({type:D.QCloudType.EVENT_CONFIG_ADD_START});break;case"ADD_DEVICE_SUCCESS":D.notifyQCloudsMsgEvent({type:D.QCloudType.EVENT_CONFIG_ADD_OK})}},onError(t){e.isDebug&&console.error("smartconfig onError",JSON.stringify(t)),D.notifyQCloudsMsgEvent({type:D.QCloudType.EVENT_CONFIG_FAIL})},onComplete(){e.isDebug&&console.log("onComplete")}}})})}),D.listenControlThisDevice(!0,({ProductId:e,DeviceName:t,payload:o})=>{M.controlDeviceData({ProductId:e,DeviceName:t},o)}),D.listenGetThisDeviceLastStatus(!0,e=>{M.getDeviceDataMap(e).then(e=>{D.notifyQCloudsMsgEvent({type:D.QCloudType.EVENT_GET_DEVICE_STATE,data:e})}).catch(e=>(console.warn("拉取deviceData失败",e),D.notifyQCloudsMsgEvent({type:D.QCloudType.EVENT_GET_DEVICE_STATE,data:null}),{}))}),D.listenUpdateDeviceName(!0,({ProductId:e,DeviceName:t,AliasName:o})=>{M.updateDeviceName({ProductId:e,DeviceName:t,AliasName:o}).then(e=>{D.notifyQCloudsMsgEvent({type:D.QCloudType.EVENT_RENAME_OK,data:null})})}),D.listenDeleteDevice(!0,({DeviceName:e,ProductId:t})=>{M.deleteDevice({DeviceName:e,ProductId:t}).then(e=>{D.notifyQCloudsMsgEvent({type:D.QCloudType.EVENT_DELETE_OK,data:null})}).catch(e=>(console.warn("解绑失败",e),D.notifyQCloudsMsgEvent({type:D.QCloudType.EVENT_DELETE_FAIL,data:e}),{}))})}function b(){return new Promise((e,t)=>{wx.getSetting({success:t=>{t.authSetting["scope.userInfo"]?wx.getUserInfo({withCredentials:!0,success:t=>{D.notifyQCloudsMsgEvent({type:D.QCloudType.EVENT_GET_USER_INFO,data:t}),e(t)}}):e({cloudID:null})}})}).then(({cloudID:e})=>wx.cloud.callFunction({name:"login",data:{userInfo:wx.cloud.CloudID(e),AppKey:MINI_AppKey,AppSecret:MINI_AppSecret}})).then(({result:{code:e,data:t,msg:o}})=>e?(D.notifyQCloudsMsgEvent({type:D.QCloudType.EVENT_INIT_FAIL,data:{code:e,msg:o}}),Promise.reject({code:e,msg:o})):t.Data)}module.exports={a:a};